/**
 * All content on this website (including text, images, source
 * code and any other original works), unless otherwise noted,
 * is licensed under a Creative Commons License.
 *
 * http://creativecommons.org/licenses/by-nc-sa/2.5/
 *
 * Copyright (C) Open-Xchange Inc., 2006-2012
 * Mail: info@open-xchange.com
 *
 * @author Daniel Rentz <daniel.rentz@open-xchange.com>
 */

/* restrict all definitions to office applications */
.io-ox-office-main {

/* ========================================================================= */
/* generic mix-in classes                                                    */
/* ========================================================================= */

.opacity(@opacity) {
    opacity: @opacity / 100;
    filter: ~"alpha(opacity=@{opacity})";
}

.border-top-left-radius(@radius) {
    -webkit-border-top-left-radius: @radius;
    -moz-border-radius-topleft: @radius;
    border-top-left-radius: @radius;
}

.border-bottom-left-radius(@radius) {
    -webkit-border-bottom-left-radius: @radius;
    -moz-border-radius-bottomleft: @radius;
    border-bottom-left-radius: @radius;
}

.border-top-right-radius(@radius) {
    -webkit-border-top-right-radius: @radius;
    -moz-border-radius-topright: @radius;
    border-top-right-radius: @radius;
}

.border-bottom-right-radius(@radius) {
    -webkit-border-bottom-right-radius: @radius;
    -moz-border-radius-bottomright: @radius;
    border-bottom-right-radius: @radius;
}

.box-shadow-2(@shadow1, @shadow2) {
    -webkit-box-shadow: @shadow1, @shadow2;
    -moz-box-shadow: @shadow1, @shadow2;
    -ms-box-shadow: @shadow1, @shadow2;
    box-shadow: @shadow1, @shadow2;
}

/* ========================================================================= */
/* icons                                                                     */
/* ========================================================================= */

@icon-size: 14px;
@caret-width: 7px;

/*
 * Replace images for office icons with CSS class "io-ox-office-icon". Icons
 * are 14x14px with a 6px grid spacing.
 */
i.io-ox-office-icon {
    display: inline-block;
    width: @icon-size;
    height: @icon-size;
    margin: 0;
    background-image: url(img/ox-office-icons-black.png);
    background-origin: content-box;
    line-height: @icon-size;
    vertical-align: text-top;

    &.icon-white {
        background-image: url(img/ox-office-icons-white.png);
    }

    .icon-position(@x, @y) {
        background-position: -(20px * @x) -(20px * @y);
    }

    &.arrow-first           { .icon-position(4, 0); }
    &.arrow-previous        { .icon-position(5, 0); }
    &.arrow-next            { .icon-position(6, 0); }
    &.arrow-last            { .icon-position(7, 0); }

    &.clipboard-cut         { .icon-position(8, 0); }
    &.clipboard-copy        { .icon-position(9, 0); }
    &.clipboard-paste       { .icon-position(10, 0); }
}

/* give standard Bootstrap icons a minimum width */
i[class^="icon-"], i[class^=" icon-"] {
    min-width: @icon-size;
    font-size: 16px;
    text-align: center;
}

i[class^="icon-caret-"], i[class^=" icon-caret-"] {
    min-width: 0;
    font-size: 12px;
}

/* ========================================================================= */
/* panes and view components                                                 */
/* ========================================================================= */

/* background color for panes */
@pane-fill-color: #333333;

/* background color for panes */
@app-pane-fill-color: #e5e5e5;

/* shadow for hovering elements */
.drop-shadow(@size: 5px) {
    .box-shadow(0 @size 2 * @size fade(black, 20%));
}

/* panes =================================================================== */

> .view-pane {
    position: absolute;
    background: @pane-fill-color;
    line-height: 0;

    /* the application pane in the middle between all view panes */
    &.app-pane {
        .box-sizing(content-box);
        margin: 0;
        padding: 0;
        background: @app-pane-fill-color;

        /* the container element for the application contents */
        > .app-container {
            position: absolute;
            display: block;
            top: 0; bottom: 0; 
            left: 0; right: 0;
        } 
        
        /* scrollable app pane, center container node horizontally into application pane */
        &.scrollable {
            .overflow(auto);
            text-align: center;

            /* the container element for the application contents */
            > .app-container {
                position: relative;
                display: inline-block;
                width: auto;
                height: auto;

                /* generic design of a 'page': white background with box shadow */
                > .page {
                    position: relative;
                    background: white;
                    .box-shadow(0 0 8px fade(black, 20%));
                }
            }
        }
    }
}

/* the inner shadows of the application pane */
> .app-pane-shadow {
    position: absolute;
    .box-shadow(0 0 10px fade(black, 20%));
}

/* view components ========================================================= */

.view-component {

    /* standard height of controls */
    @control-height: 36px;
    /* horizontal padding in control elements */
    @control-padding: 10px;
    /* space between control caption elements */
    @caption-spacing: 5px;
    /* standard height of controls in drop-down lists */
    @list-item-height: 30px;

    /* border width of buttons in framed design mode */
    @framed-border-width: 3px;

    /* glow effect for focused controls, use as argument for .box-shadow() */
    @focus-glow-effect: 0 0 8px 2px fade(@selectedBackground, 60%);
    /* glow effect for focused and hovered controls, use as argument for .box-shadow() */
    @focus-glow-hover-effect: 0 0 8px 2px fade(@selectedBackground, 75%);

    position: relative;
    padding: 0;

    /* hidden components ('important' to overrule display modes from other rules) */
    &.hidden {
        display: none !important;
    }

    /* half-transparent hover effect */
    &.hover-effect {
        .transition(opacity 0.2s linear);
        &:not(:hover) { .opacity(70); }
    }

    /* groups (container elements for controls) ---------------------------- */

    .group {
        /* relative position is essential for drop-down menu positioning */
        position: relative;
        .box-sizing(border-box);

        /* hidden groups ('important' to overrule display modes from other rules) */
        &.hidden {
            display: none !important;
        }

        /* disabled groups ('important' to overrule display modes from other rules) */
        &.disabled {
            /* override mouse pointer for any embedded elements */
            &, * { cursor: default !important; }
        }

        /* common control settings ----------------------------------------- */

        label, a.button, input {
            display: inline-block;
            position: relative;
            .box-sizing(border-box);
            height: @control-height;
            margin: 0;
            padding: 0;
            overflow: hidden;
            background: none;
            border: none;
            .border-radius(0);
            .box-shadow(none);
            .transition(none);
            white-space: nowrap;
            font-size: 13px;
            font-weight: normal;
            color: @textColor;
            text-shadow: none;
            vertical-align: top;

            /* prevent dotted focus rectangle around the control */
            &:focus, &:active {
                outline: none;
            }
        }

        /* control caption elements (always spans as children) */
        label, a.button {
            padding-left: @control-padding;
            padding-right: @control-padding;
            line-height: @control-height;

            span {
                display: inline-block;
                vertical-align: top;
            }

            > .caption {
                .box-sizing(border-box);
                width: 100%;
                overflow: hidden;

                > span + span {
                    margin-left: @caption-spacing;
                }
            }
        }

        /* fade out caption for buttons and labels in disabled groups */
        &.disabled label, &.disabled a.button, label.disabled, a.button.disabled {
            > .caption, > span {
                .opacity(50);
            }
        }

        /* labels ---------------------------------------------------------- */

        label {
            text-align: center;
            cursor: default;
        }

        /* buttons --------------------------------------------------------- */

        a.button {
            text-align: left;

            &.dropdown-button {
                padding-right: @caret-width + @control-padding;

                > .caption > span:last-child {
                    margin-right: @caption-spacing;
                }

                > span.dropdown-caret {
                    position: absolute;
                    top: 0;
                    right: @control-padding;
                }
            }
        }

        /* text fields ----------------------------------------------------- */

        input {
            width: 150px;
            padding-left: 4px;
            padding-right: 4px;
            line-height: normal;
            cursor: text;

            &.readonly {
                cursor: default;
            }
        }

        /* item buttons in drop-down menus --------------------------------- */

        &.item-buttons {
    
            a.button {
                display: block;
                width: 100%;
                height: @list-item-height;
                line-height: @list-item-height;
                text-align: left;
            }

            /* list drop-downs */
            &.list {
            }

            /* grid drop-downs */
            &.grid {
                > table > tbody > tr > td {
                    padding: 0;
                }
            }
        }

        /* group designs --------------------------------------------------- */

        &.design-default.item-buttons {
            padding: 5px 0;

            a.button {
                border: 1px solid transparent;
                line-height: @list-item-height - 2px;

                &.selected {
                    background: fade(@selectedBackground, 60%);
                }
            }

            &:not(.disabled) a.button:not(.disabled) {

                &:hover { background: fade(black, 5%); }
                &:active { background: fade(black, 10%); }

                &:focus:not(:active) {
                    border-color: @selectedBackground;
                    .box-shadow(@focus-glow-effect);
                }

                &.selected {
                    &:hover { background: fade(@selectedBackground, 70%); }
                    &:active { background: fade(@selectedBackground, 80%); }
                }
            }
        }

        /* framed design: selected, hover, focus with borders (preserve contents) */
        &.design-framed {

            a.button {
                border: @framed-border-width solid transparent;
                .border-radius(5px);
                line-height: @control-height - 2 * @framed-border-width;

                &.selected {
                    border-color: @selectedBackground;
                    .drop-shadow(4px);
                }
            }

            &:not(.disabled) a.button:not(.disabled) {
                &:hover:not(:focus) { border-color: fade(black, 10%); }
                &:active:not(:focus) { border-color: fade(black, 10%); }
                &:focus { border-color: fade(@selectedBackground, 60%); }

                &.selected {
                    &:hover:not(:focus) { border-color: darken(@selectedBackground, 5%); }
                    &:active:not(:focus) { border-color: darken(@selectedBackground, 10%); }
                    &:focus { border-color: darken(@selectedBackground, 20%); }
                }
            }

            &.item-buttons {
                padding: 5px;

                a.button {
                    height: @control-height + 2 * @framed-border-width;
                    padding-left: 12px;
                    padding-right: 12px;
                    line-height: @control-height;

                    &:not(:first-child) {
                        margin-top: 4px;
                    }
                }
            }
        }

    } /* end of .group */

    /* tool boxes ---------------------------------------------------------- */

    &.toolbox {

        /* left/right padding to controls */
        @toolbox-padding: 13px;
        /* default spacing between controls */
        @control-spacing: 8px;
        /* border radius for controls */
        @border-radius: 5px;
        /* height of the heading label */
        @heading-height: 32px;

        /* default 3D effect for buttons */
        @button-shadow-effect: 10px 20px 20px -20px fade(white, 20%) inset;
        /* default 3D effect for selected buttons */
        @selected-button-shadow-effect: 10px 20px 20px -20px fade(white, 50%) inset;
        /* default 3D effect for text fields */
        @textfield-shadow-effect: -10px -20px 20px -20px fade(white, 10%) inset;

        display: block;
        .box-sizing(content-box);
        padding: @control-spacing @toolbox-padding 0;
        /* size the tool box according to its floated children */
        overflow: hidden;

        /* float at right border */
        &.right {
            float: right;
        }

        .group, > .group-container {
            display: inline-block;
            float: left;
        }

        /* show groups in a horizontal bar */
        > .group, > .group-container {
            margin-right: @control-spacing;
            margin-bottom: @control-spacing;
            .border-radius(@border-radius);
            .box-shadow(2px 2px 6px fade(white, 10%));

            &.right {
                float: right;
                margin-right: 0;
            }

            &:last-child {
                margin-right: 0;
            }

            /* line break */
            &.line-break {
                clear: both;
            }
        }

        > .group-container > .group {
            &:first-child {
                .border-top-left-radius(@border-radius);
                .border-bottom-left-radius(@border-radius);
            }
            &:last-child {
                .border-top-right-radius(@border-radius);
                .border-bottom-right-radius(@border-radius);
            }
            + .group {
                margin-left: -1px;
            }
        }

        >.group, > .group-container > .group:first-child {
            > *:first-child {
                .border-top-left-radius(@border-radius);
                .border-bottom-left-radius(@border-radius);
            }
        }

        >.group, > .group-container > .group:last-child {
            > *:last-child {
                .border-top-right-radius(@border-radius);
                .border-bottom-right-radius(@border-radius);
            }
        }

        /* groups spanning the full width of the pane */
        > .group.full-width {
            width: 100%;
            margin-right: 0;
        }

        .group {

            label, a.button, input {
                border: 1px solid #181818;

                + label, + a.button, + input {
                    margin-left: -1px;
                }
            }

            label, a.button {
                line-height: @control-height - 2px;
            }

            /* raise hovered/focused control to make all borders visible */
            &:not(.disabled) {
                a.button, input {
                    &:not(.disabled) {
                        &:hover:not(:focus), &:active:not(:focus) { z-index: 2; }
                        &:focus { z-index: 4; }
                    }
                }

                a.button:not(.disabled):focus:not(:active) {
                    border-color: @selectedBackground;
                    .box-shadow(@focus-glow-effect);
                }
            }

            /* add specific design properties for white on dark design */
            &.design-default {
                background: @pane-fill-color;

                label, a.button, input {
                    color: white;
                }

                /* color of place holder in text fields */
                input {
                    .placeholder-color() { color: lighten(@pane-fill-color, 15%); }
                    &::-webkit-input-placeholder { .placeholder-color(); }
                    &:-moz-placeholder { .placeholder-color(); }
                    &::-moz-placeholder { .placeholder-color(); }
                    &:-ms-input-placeholder { .placeholder-color(); }
                }

                /* selected toggle/radio buttons */
                a.button.selected {
                    background: fade(@selectedBackground, 50%);
                }

                /* keyboard/mouse effects (not for disabled buttons/text fields or groups) */
                &:not(.disabled) {

                    a.button:not(.disabled) {
                        .box-shadow(@button-shadow-effect);

                        &:hover { background: fade(white, 5%); }
                        &:active { background: fade(black, 5%); }

                        &:focus:not(:active) {
                            .box-shadow-2(@button-shadow-effect, @focus-glow-effect);
                        }

                        /* selected toggle/radio buttons */
                        &.selected {
                            .box-shadow(@selected-button-shadow-effect);

                            &:hover { background: fade(@selectedBackground, 60%); }
                            &:active { background: fade(@selectedBackground, 40%); }

                            &:focus:not(:active) {
                                .box-shadow-2(@selected-button-shadow-effect, @focus-glow-effect);
                            }
                        }
                    }

                    /* text fields without white background as long as not focused */
                    input:not(.disabled) {

                        &:not(:focus) {
                            .box-shadow(@textfield-shadow-effect);
                            &:hover { background: fade(white, 5%); }
                        }

                        &:focus, &:active {
                            background: white;
                            color: @textColor;

                            /* color of place holder in text fields */
                            .placeholder-color() { color: #ccc; }
                            &::-webkit-input-placeholder { .placeholder-color(); }
                            &:-moz-placeholder { .placeholder-color(); }
                            &::-moz-placeholder { .placeholder-color(); }
                            &:-ms-input-placeholder { .placeholder-color(); }
                        }
                    }
                    
                    /* effects for all elements in groups with text boxes (ComboField) */
                    &.text-focus {
                        .box-shadow(@focus-glow-effect);
        
                        input, a.button {
                            &, &:hover, &:focus, &:active {
                                background: white;
                                color: @textColor;
                                border-color: @selectedBackground;
                            }
                        }

                        > input:not(:last-child) { border-right-color: transparent; }
                        > input + a.button { border-left-color: transparent; }
}
                }
            }

        } /* end of .group */

        /* add specific design properties for the heading button */
        &.collapsing {
            margin-top: -@control-spacing;
            padding-top: @heading-height + 2 * @control-spacing;

            > .group.design-heading {
                position: absolute;
                top: @control-spacing;
                left: -1px;
                right: -1px;
                margin-right: 0;
                background: #222;
                .box-shadow(5px 20px 20px -20px fade(white, 10%) inset);
                .border-radius(0);

                a.button {
                    width: 100%;
                    height: @heading-height;
                    .border-radius(0);
                    line-height: @heading-height - 2px;
                    font-size: 12px;
                    font-weight: bold;
                    color: white;
                    text-align: center;
                }

                /* do not fade out disabled headings (but stick to default mouse pointer) */
                &.disabled a.button, a.button.disabled {
                    > .caption, > span {
                        .opacity(100);
                    }
                }
            }

            /* collapsed: hide all groups following the heading button */
            &.collapsed > .group.design-heading ~ * {
                display: none;
            }
        }

    } /* end of &.toolbox */

} /* end of .view-component */

/* modified shadow effect for groups in transparent panes */
.view-pane.transparent > .view-component.toolbox {
    overflow: visible;

    > .group, > .group-container {
        .drop-shadow();
    }
}

/* ========================================================================= */
/* drop-down menu elements                                                   */
/* ========================================================================= */

&.dropdown-container {
    display: inline-block;
    position: absolute;
    z-index: 1000;
    margin: 0;
    padding: 0;
    overflow: visible;
    background: white;
    border: none;
    .border-radius(5px);
    .drop-shadow();
    font-size: 0;
    line-height: 0;

    > .view-component {
        display: inline-block;
        width: auto;

        > .group {
            display: inline-block;
            width: 100%;
        }
    }
}

/* ========================================================================= */

} /* end of .io-ox-office-main */

/* ========================================================================= */
/* alerts                                                                    */
/* ========================================================================= */

body .window-body .window-content.io-ox-office-main .alert {
    position: absolute;
    .box-sizing(border-box);
    top: 0;
    left: 0;
    right: 0;
    width: auto;
    margin: 0;
    padding: 4px 13px;
    z-index: 100;
    .border-radius(0);

    h4, p, button {
        float: left;
        display: inline-block;
        margin-right: 10px;
    }

    h4 {
        font-size: 16px;
    }

    p {
        font-size: 13px;
    }

    .close {
        right: 0;
    }
}
