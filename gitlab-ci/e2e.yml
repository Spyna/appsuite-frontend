---

# deploy e2e environment to well-known location - can be used to develop e2e tests against
deploy e2e dev server:
  stage: deploy
  dependencies: []
  variables:
    DOCKER_HOST: docker.ui.cloud.open-xchange.com
    DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    CONTAINER_NAME: e2e-develop
    SERVER: http://10.20.28.164/appsuite/
  script:
    - docker stop $CONTAINER_NAME || true
    - docker wait $CONTAINER_NAME || true
    - docker rm $CONTAINER_NAME || true
    - docker pull $DOCKER_IMAGE
    - docker container create --name $CONTAINER_NAME -e SERVER=$SERVER -v /app/build/e2e $DOCKER_IMAGE e2e
    - docker container cp ui/e2e/fixtures $CONTAINER_NAME:/app/build/e2e
    - docker container start $CONTAINER_NAME
  only:
    - develop

deploy e2e testserver:
  stage: deploy
  dependencies: []
  variables:
    DOCKER_HOST: docker.ui.cloud.open-xchange.com
    DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    CONTAINER_NAME: e2e_$CI_PIPELINE_ID
    SERVER: http://10.20.28.164/appsuite/
  script:
    - docker pull $DOCKER_IMAGE
    - docker container create --name $CONTAINER_NAME -e SERVER=$SERVER -v /app/build/e2e $DOCKER_IMAGE e2e
    - docker container cp ui/e2e/fixtures $CONTAINER_NAME:/app/build/e2e
    - docker container start $CONTAINER_NAME

run e2e tests:
  stage: e2e
  image: gitlab.open-xchange.com:4567/frontend/dev_env:latest
  services:
    - selenium/standalone-chrome
  dependencies: []
  variables:
    LAUNCH_URL: http://e2e-$CI_PIPELINE_ID.ui.cloud.open-xchange.com/appsuite/
    SELENIUM_HOST: selenium-standalone-chrome
    PARTITIONS: '@shaky ^Accessibility ^Contacts ^Login ^Mail\sCompose ^Calendar(:|\s>) ^Calendar\s[^>] ^Mail\s> ^Drive ^Portal ^Sharing ^General ^Settings ^Tasks ^Mailfilter'
  script:
    # make PARTITIONS an array
    - PARTITIONS=(${PARTITIONS})
    - cd ui
    - yarn --non-interactive --no-progress -s --cache-folder ../.yarn-cache
    # on node 1 run shaky tests. Never fail the pipeline
    # - '[ "$CI_NODE_INDEX" -eq "1" ] && yarn e2e -g "${PARTITION[${CI_NODE_INDEX} - 1]}" || true'
    # read this like: this is node x (with x not being 1) -- run tests selected for this node -- return the result of testrun only for the current node
    # RegEx: Starts with one of the trigger words of the list, but does not contain @shaky anywhere
    - PATTERN=${PARTITIONS[$CI_NODE_INDEX - 1]}
    - if [ ${CI_NODE_INDEX} -ne "1" ]; then PATTERN+="\s?((?!"; PATTERN+=${PARTITIONS[0]}; PATTERN+=").)*$"; fi;
    - yarn e2e -g "$PATTERN" || [ "$CI_NODE_INDEX" -eq "1" ];
  tags:
    - e2e
  parallel: 15
  artifacts:
    when: always
    paths:
      - ui/build/e2e/
    expire_in: 1 day

generate e2e report:
  stage: report
  image: gitlab.open-xchange.com:4567/frontend/dev_env/allure:latest
  variables:
    GIT_STRATEGY: none
  dependencies:
    - run e2e tests
  script:
    # fetch current version of history
    - wget http://reports.ui.cloud.open-xchange.com/$CI_COMMIT_REF_SLUG/history.tar -q -O - | tar x &>/dev/null && mv ui/build/allure-report/history ui/build/e2e/ || echo "No history found"
    - allure generate ui/build/e2e/ -o ui/build/allure-report/$CI_PIPELINE_ID
    # preserve well-known location to bookmark/link to at latest
    - cp -r ui/build/allure-report/$CI_PIPELINE_ID/history ui/build/allure-report/
    - tar cf ui/build/allure-report/history.tar ui/build/allure-report/history &>/dev/null || echo "No history found"
    - rm -rf ui/build/allure-report/history/
  when: always
  artifacts:
    when: always
    paths:
      - ui/build/allure-report
    expire_in: 1 day
  only:
    - develop
    - master
    - /^master-/
    - /^release-/
    - /^feature\//
    - /^bug\//

publish e2e report:
  stage: cleanup
  variables:
    DOCKER_HOST: docker.ui.cloud.open-xchange.com
    GIT_STRATEGY: none
  dependencies:
    - generate e2e report
  script:
    - docker cp ui/build/allure-report/. reports:/usr/share/nginx/html/$CI_COMMIT_REF_SLUG
    - docker exec reports rm -f /usr/share/nginx/html/$CI_COMMIT_REF_SLUG/latest
    - docker exec reports ln -sf /usr/share/nginx/html/$CI_COMMIT_REF_SLUG/$CI_PIPELINE_ID /usr/share/nginx/html/$CI_COMMIT_REF_SLUG/latest
  environment:
    name: reports/$CI_COMMIT_REF_SLUG
    url: http://reports.ui.cloud.open-xchange.com/$CI_COMMIT_REF_SLUG/$CI_PIPELINE_ID/
    on_stop: remove e2e report
  when: always
  only:
    - develop
    - master
    - /^master-/
    - /^release-/
    - /^feature\//
    - /^bug\//

remove e2e report:
  stage: cleanup
  dependencies: []
  variables:
    DOCKER_HOST: docker.ui.cloud.open-xchange.com
    GIT_STRATEGY: none
  script:
    - docker exec reports rm -rf /usr/share/nginx/html/$CI_COMMIT_REF_SLUG
  environment:
    name: reports/$CI_COMMIT_REF_SLUG
    action: stop
  when: manual
  except:
    - develop
    - master
    - master-*

stop e2e testserver:
  stage: cleanup
  dependencies: []
  variables:
    GIT_STRATEGY: none
    DOCKER_HOST: docker.ui.cloud.open-xchange.com
    DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    CONTAINER_NAME: e2e_$CI_PIPELINE_ID
  script:
    - docker container stop $CONTAINER_NAME || true
    - docker container wait $CONTAINER_NAME || true
    - docker container rm $CONTAINER_NAME || true
  when: always
