digraph signin {
    compound=true;
//    concentrate=true;
    
    subgraph clusterFetchServerConfig {
        node [shape=box];
        fetchServerConfig;
        "configCache.get";
        "cached config";
        "configCache.add";
        "api/apps/manifests?action=config";
        getCachedServerConfig;
        getCachedServerConfig_useFallback [label="getCachedServerConfig"];
        setFallbackConfig;
        "configCache.get 2" [label="configCache.get"];
        "configCache.get 3" [label="configCache.get"];
        fetchServerConfig_done [label="done"];
        fetchServerConfig_fail [label="fail"];
        
        node [shape=none margin=0];
        updateServerConfig [label=<<TABLE BORDER="0" CELLSPACING="0" CELLBORDER="1">
            <TR><TD>updateServerConfig</TD></TR>
            <TR><TD><FONT COLOR="blue">ox.serverConfig</FONT></TD></TR>
            <TR><TD><FONT COLOR="blue">capabilities.reset()</FONT></TD></TR>
        </TABLE>>];
        
        node [shape=octagon];
        fetchServerConfig -> "configCache.get" [label="ox.online"];
        "configCache.get" -> "cached config";
        "cached config" -> updateServerConfig [label="<12h old"];
        updateServerConfig -> fetchServerConfig_done;
        "cached config" -> "api/apps/manifests?action=config";
        "api/apps/manifests?action=config" -> "configCache.add" [label="done"];
        "configCache.add" -> updateServerConfig;
        "api/apps/manifests?action=config" -> getCachedServerConfig [label="fail"];
        getCachedServerConfig -> "configCache.get 2" [label="configCache"];
        "configCache.get 2" -> updateServerConfig [label="cached"];
        "configCache.get 2" -> fetchServerConfig_fail;
        getCachedServerConfig -> setFallbackConfig;
        setFallbackConfig -> updateServerConfig;
        
        fetchServerConfig -> getCachedServerConfig_useFallback;
        getCachedServerConfig_useFallback -> "configCache.get 3" [label="configCache"];
        "configCache.get 3" -> updateServerConfig [label="cached"];
        "configCache.get 3" -> setFallbackConfig;
        getCachedServerConfig_useFallback -> setFallbackConfig;
    }
    
    synchronous [shape=box label=<<TABLE BORDER="0">
        <TR><TD>signin</TD></TR>
        <TR><TD><TABLE CELLSPACING="0" CELLBORDER="0">
            <TR><TD BORDER="1">html/core_head.html</TD></TR>
            <TR><TD ALIGN="LEFT" BALIGN="LEFT">
boot.js<BR/>
    lib/jquery.min.js<BR/>
    lib/jquery.mobile.touch.min.js<BR/>
    lib/underscore.js<BR/>
    lib/require.js<BR/>
    lib/require-fix.js<BR/>
    lib/modernizr.js<BR/>
    lib/bigscreen.js<BR/>
    lib/placeholder.min.js<BR/>
    lib/backbone.js<BR/>
    lib/backbone.modelbinder.js<BR/>
    lib/backbone.collectionbinder.js<BR/>
    lib/backbone.validation.js<BR/>
    lib/backbone.custom.js<BR/>
    lib/doT.js<BR/>
    tmp/dependencies.json<BR/>
    src/plugins.js<BR/><FONT COLOR="blue">
        dynamic concatenation<BR/>
        css<BR/>
        less<BR/>
        themes<BR/>
        gettext<BR/>
        dot<BR/>
        withPluginsFor<BR/></FONT>
    src/jquery.plugins.js</TD></TR>
            <TR><TD ALIGN="LEFT" BALIGN="LEFT" PORT="gettext">
    <FONT COLOR="red">io.ox/core/gettext</FONT></TD></TR>
            <TR><TD ALIGN="LEFT" BALIGN="LEFT">
    src/util.js<BR/>
        <FONT COLOR="blue">_ (underscore mixins)</FONT><BR/>
    src/boot.js<BR/>
        <FONT COLOR="blue">console fallback</FONT></TD></TR>
            <TR><TD ALIGN="LEFT" BALIGN="LEFT" PORT="load">
        $(window).load</TD></TR>
        </TABLE></TD></TR>
        <TR><TD><TABLE BORDER="0" CELLSPACING="0" CELLBORDER="1">
            <TR><TD>html/signin.html</TD></TR>
            <TR><TD><FONT COLOR="blue">ox.signin</FONT></TD></TR>
        </TABLE></TD></TR>
    </TABLE>>];
    
    node [shape=none margin=0];
    
    onload [label=<<TABLE BORDER="0" CELLSPACING="0" CELLBORDER="1">
        <TR><TD><FONT COLOR="forestgreen">boot.js: Go!</FONT></TD></TR>
        <TR><TD><FONT COLOR="blue">$.Deferred for require</FONT></TD></TR>
        <TR><TD><FONT COLOR="forestgreen">boot.js: require([...], loadSuccess, loadFail);</FONT></TD></TR>
        <TR><TD PORT="require">require</TD></TR>
    </TABLE>>];
    
    firstModules [label=<<TABLE CELLSPACING="0" CELLBORDER="0">
        <TR><TD ALIGN="LEFT" BALIGN="LEFT">
io.ox/core/manifests<BR/><FONT COLOR="blue">
    ox.withPluginsFor<BR/>
    ox.manifests<BR/></FONT>
    <FONT COLOR="red">reads ox.serverConfig.manifests</FONT><BR/>
io.ox/core/session<BR/>
io.ox/core/cache/indexeddb<BR/>
io.ox/core/cache/localstorage<BR/>
io.ox/core/cache/simple<BR/>
io.ox/core/cache</TD></TR>
        <TR><TD ALIGN="LEFT" BALIGN="LEFT" PORT="gettext">io.ox/core/gettext</TD></TR>
        <TR><TD ALIGN="LEFT" BALIGN="LEFT">
io.ox/core/capabilities<BR/>
io.ox/core/config<BR/>
themes<BR/>
io.ox/core/settings<BR/>
    <FONT COLOR="blue">settings</FONT></TD></TR>
    </TABLE>>];
    
    loadSuccess [label=<<TABLE BORDER="0" CELLSPACING="0" CELLBORDER="1">
        <TR><TD>loadSuccess</TD></TR>
        <TR><TD><FONT COLOR="forestgreen">boot.js: require &gt; loadSuccess</FONT></TD></TR>
        <TR><TD PORT="appCache">appCache.done</TD></TR>
    </TABLE>>];
    
    cont [label=<<TABLE BORDER="0" CELLSPACING="0" CELLBORDER="1">
        <TR><TD>applicationCache events</TD></TR>
        <TR><TD><FONT COLOR="forestgreen">boot.js: applicationcache &gt; resolve</FONT></TD></TR>
    </TABLE>>];
    
    autoLogin [label=<<TABLE BORDER="0" CELLSPACING="0" CELLBORDER="1">
        <TR><TD>autoLogin</TD></TR>
        <TR><TD><FONT COLOR="forestgreen">boot.js: autoLogin ...</FONT></TD></TR>
    </TABLE>>];
    
    hashSession [label=<<TABLE BORDER="0" CELLSPACING="0" CELLBORDER="1">
        <TR><TD><FONT COLOR="forestgreen">boot.js: autoLogin &gt; hash.session</FONT></TD></TR>
        <TR><TD><FONT COLOR="blue">ox.session</FONT></TD></TR>
    </TABLE>>];
    
    hashSession2 [label=<<TABLE BORDER="0" CELLSPACING="0" CELLBORDER="1">
        <TR><TD><FONT COLOR="blue">#ref decoded</FONT><BR/><FONT COLOR="red">redirect to signin?!</FONT></TD></TR>
        <TR><TD><FONT COLOR="blue">configCache</FONT></TD></TR>
        <TR><TD><FONT COLOR="blue">ox.secretCookie</FONT></TD></TR>
    </TABLE>>];
    
    "io.ox/core/extensions" [label=<<TABLE BORDER="0" CELLSPACING="0" CELLBORDER="1">
        <TR><TD>io.ox/core/extensions</TD></TR>
        <TR><TD>$(window).on('unload')</TD></TR>
    </TABLE>>];
    
    "io.ox/core/http" [label=<<TABLE BORDER="0" CELLSPACING="0" CELLBORDER="1">
        <TR><TD>io.ox/core/http</TD></TR>
        <TR><TD PORT="ext"><FONT COLOR="brown">ext:io.ox/core/http/mappings</FONT></TD></TR>
    </TABLE>>];
    
    "io.ox/core/cache" [label=<<TABLE BORDER="0" CELLSPACING="0" CELLBORDER="1">
        <TR><TD>io.ox/core/cache</TD></TR>
        <TR><TD><FONT COLOR="blue">ox.cache</FONT></TD></TR>
        <TR><TD PORT="ext"><FONT COLOR="brown">ext:io.ox/core/cache/storage</FONT></TD></TR>
        <TR><TD><FONT COLOR="blue">dumpStorage</FONT></TD></TR>
    </TABLE>>];
    
    "io.ox/core/manifests sync" [label=<<TABLE BORDER="0" CELLSPACING="0" CELLBORDER="1">
        <TR><TD><FONT COLOR="blue">ox.withPluginsFor</FONT></TD></TR>
        <TR><TD><FONT COLOR="blue">ox.manifests</FONT></TD></TR>
        <TR><TD><FONT COLOR="red">reads ox.serverConfig.manifests</FONT></TD></TR>
    </TABLE>>];
    
    loginSuccess [label=<<TABLE BORDER="0" CELLSPACING="0" CELLBORDER="1">
        <TR><TD><FONT COLOR="blue">serverUp</FONT></TD></TR>
        <TR><TD><FONT COLOR="forestgreen">boot.js: autoLogin &gt; loginSuccess</FONT></TD></TR>
    </TABLE>>];

    loginSuccess2 [label=<<TABLE BORDER="0" CELLSPACING="0" CELLBORDER="1">
        <TR><TD><FONT COLOR="blue">session.set</FONT> (again)</TD></TR>
        <TR><TD><FONT COLOR="forestgreen">boot.js: autoLogin &gt; loginSuccess</FONT></TD></TR>
        <TR><TD><FONT COLOR="blue">document.title</FONT></TD></TR>
    </TABLE>>];
    
    withoutAutoLogin_success [label=<<TABLE BORDER="0" CELLSPACING="0" CELLBORDER="1">
        <TR><TD><FONT COLOR="blue">serverUp</FONT></TD></TR>
        <TR><TD><FONT COLOR="forestgreen">boot.js: fetchGeneralServerConfig &gt; success</FONT></TD></TR>
        <TR><TD><FONT COLOR="blue">document.title</FONT></TD></TR>
        <TR><TD><FONT COLOR="blue">themes.set</FONT></TD></TR>
    </TABLE>>];
    
    withoutAutoLogin_fail [label=<<TABLE BORDER="0" CELLSPACING="0" CELLBORDER="1">
        <TR><TD><FONT COLOR="blue">serverDown</FONT></TD></TR>
        <TR><TD><FONT COLOR="forestgreen">boot.js: fetchGeneralServerConfig &gt; fail</FONT></TD></TR>
    </TABLE>>];
    
    hashSession3 [label=<<TABLE BORDER="0" CELLSPACING="0" CELLBORDER="1">
        <TR><TD><FONT COLOR="blue">serverUp</FONT></TD></TR>
        <TR><TD><FONT COLOR="blue">session.set</FONT></TD></TR>
        <TR><TD><FONT COLOR="blue">_.url.hash (cleanup URL)</FONT></TD></TR>
    </TABLE>>];
    
    node [shape=box margin=0.1];
    
    "first require";
    fetchUserSpecificConfig;
    fetchUserSpecificConfig2 [label="fetchUserSpecificConfig"];
    autologin [label=<<FONT COLOR="forestgreen">boot.js: autoLogin &gt; session.autoLogin()</FONT>>];
    autologin2 [label=<<FONT COLOR="blue">configCache</FONT>>];
    loginFailed [label=<<FONT COLOR="forestgreen">boot.js: autoLogin &gt; loginSuccess</FONT>>];
    continueWithoutAutoLogin;
    continueWithoutAutoLogin2 [label=<<FONT COLOR="forestgreen">boot.js: fetchGeneralServerConfig ...</FONT>>];
    fetchGeneralServerConfig;
    fetchGeneralServerConfig2 [label="fetchGeneralServerConfig"];
    
    "src/manifests.js";
    "io.ox/core/event";
    "io.ox/core/session";
    "io.ox/core/cache/indexeddb";
    "io.ox/core/cache/localstorage";
    "io.ox/core/cache/simple";
    "io.ox/core/manifests";
    
    node [shape=octagon];
    
    synchronous:gettext -> "io.ox/core/gettext";
    
    synchronous:load -> onload;
    onload:require -> "first require";
    
    "io.ox/core/http" -> "first require";
    "io.ox/core/session" -> "first require";
    "io.ox/core/cache" -> "first require";
    "io.ox/core/extensions" -> "first require";
    "io.ox/core/gettext" -> "first require";
    "io.ox/core/manifests" -> "first require";
    "io.ox/core/capabilities" -> "first require";
    "io.ox/core/config" -> "first require";
    "themes" -> "first require";
    "io.ox/core/settings" -> "first require";

    "first require" -> loadSuccess;
    "first require" -> loadFail;

    "io.ox/core/event" -> "io.ox/core/http";
    "io.ox/core/extensions" -> "io.ox/core/http";
    "io.ox/core/http" -> "io.ox/core/session";
    "io.ox/core/manifests" -> "io.ox/core/session";
    "io.ox/core/extensions" -> "io.ox/core/cache";
    "io.ox/core/cache/indexeddb" -> "io.ox/core/cache";
    "io.ox/core/cache/localstorage" -> "io.ox/core/cache";
    "io.ox/core/cache/simple" -> "io.ox/core/cache";
    "io.ox/core/extensions" -> "io.ox/core/cache/indexeddb";
    "io.ox/core/extensions" -> "io.ox/core/cache/localstorage";
    "io.ox/core/extensions" -> "io.ox/core/cache/simple";
    "io.ox/core/extensions" -> "io.ox/core/manifests sync";
    "io.ox/core/capabilities" -> "io.ox/core/manifests sync";
    
    "io.ox/core/manifests sync" -> "src/manifests.js" [label="#customManifests"];
    "src/manifests.js" -> "io.ox/core/manifests";
    "io.ox/core/manifests sync" -> "io.ox/core/manifests";

    onload -> appCache;
    onload -> cont [label=<Modernizr.applicationcache &amp;&amp;<BR/>_.browser.webkit &amp;&amp; ox.debug>];
    cont -> appCache;
    
    appCache -> autoLogin;
    loadSuccess:appCache -> autoLogin;
    
    autoLogin -> hashSession [label="#session"];
    autoLogin -> autoLoginFalse [label="#autologin=false"];
    autoLogin -> offline [label="!ox.online"];
    autoLogin -> autologin;
    autologin -> "io.ox/core/session#autoLogin";
    "io.ox/core/session#autoLogin" -> autologin2;
    autologin2 -> loginSuccess [label="done"];
    autologin2 -> loginFailed [label="fail"];
    loginFailed -> continueWithoutAutoLogin;
    loginSuccess -> gotoCore [label="ox.signin"];
    loginSuccess -> fetchUserSpecificConfig2;
    fetchUserSpecificConfig2 -> loginSuccess2;
    loginSuccess2 -> loadCoreFiles;
    loadCoreFiles -> loadCore;
    
    continueWithoutAutoLogin -> continueWithoutAutoLogin2 [label="ox.signin"];
    continueWithoutAutoLogin -> fetchGeneralServerConfig2;
    fetchGeneralServerConfig2 -> gotoSignin;
    continueWithoutAutoLogin2 -> fetchGeneralServerConfig;
    fetchGeneralServerConfig -> fetchServerConfig [lhead=clusterFetchServerConfig];
    fetchServerConfig_done -> withoutAutoLogin_success [label="done" ltail=clusterFetchServerConfig];
    withoutAutoLogin_success -> initialize;
    fetchServerConfig_fail -> withoutAutoLogin_fail [label="fail" ltail=clusterFetchServerConfig];
    
    hashSession -> sessionStore [label="#store=true"];
    hashSession -> hashSession2;
    sessionStore -> hashSession2;
    
    hashSession2 -> fetchUserSpecificConfig;
    fetchUserSpecificConfig -> hashSession3;
    hashSession3 -> loadCoreFiles;
    
    edge [style=dashed];

    "io.ox/core/cache/indexeddb" -> "io.ox/core/cache":ext;
    "io.ox/core/cache/localstorage" -> "io.ox/core/cache":ext;
    "io.ox/core/cache/simple" -> "io.ox/core/cache":ext;
};
