image: docker:latest

include:
  - local: "/gitlab-ci/docker.yml"
  - local: "/gitlab-ci/preview_apps.yml"
  - local: "/gitlab-ci/documentation.yml"
  - local: "/gitlab-ci/packaging.yml"
  - local: "/gitlab-ci/e2e.yml"

stages:
  - build
  - test
  - deploy
  - e2e
  - report
  - cleanup

.default_cache:
  cache:
    # use one cache
    key: "yarn"
    paths:
      - ".yarn-cache"

.build ui plugin:
  extends: .default_cache
  image: gitlab.open-xchange.com:4567/frontend/dev_env:latest
  variables:
    build_tasks: dist:build
    build_script: grunt ${build_tasks}
  script:
    - cd ${PROJECT_PATH}
    - yarn --non-interactive --no-progress -s --cache-folder ../.yarn-cache
    - echo ${build_script}
    - eval "${build_script}"
    - "[ -z \"$PACKAGE_NAME\" ] && export PACKAGE_NAME=${PROJECT_PATH}"
    - "[ -z \"$HTDOCS_PACKAGE_NAME\" ] && export HTDOCS_PACKAGE_NAME=${PACKAGE_NAME}"
    - "[ -z \"$L10N_PACKAGE_NAME\" ] && export L10N_PACKAGE_NAME=${PACKAGE_NAME}"
    - npx grunt install:dist --prefix=../${PACKAGE_NAME}/build/pkg --htdoc=../${HTDOCS_PACKAGE_NAME}/build/pkg
    - npx grunt install:languages --prefix=../${L10N_PACKAGE_NAME}/build/pkg
  stage: build
  artifacts:
    expire_in: 2hours
    paths:
      - "*/build"
      - "*/dist"
      - "*/node_modules"

# split build_ui into 2 build jobs (running on 2 different runners in parallel)
# this distributes workload onto 2 runners instead of one and basically halves build time
build ui:
  extends: .build ui plugin
  parallel: 2
  variables:
    PROJECT_PATH: ui
    PACKAGE_NAME: open-xchange-appsuite-manifest
    HTDOCS_PACKAGE_NAME: open-xchange-appsuite
    L10N_PACKAGE_NAME: open-xchange-appsuite-l10n
    build_script: eval "grunt \$${build_tasks_$$CI_NODE_INDEX}"
    build_tasks_1: lint copy_build compile_po concat uglify:dist_largeFiles less copy_dist
    build_tasks_2: copy_build compile_po concat uglify:dist uglify:dist_i18n create_i18n_properties copy_dist
  tags:
    - openstack
  only:
    changes:
      - ui/**/*
      - update-themes/**/*
      - open-xchange-appsuite/**/*
      - open-xchange-appsuite-l10n/**/*
      - open-xchange-appsuite-manifest/**/*
      - gitlab_ci/*
      - .gitlab-ci.yml

build update-themes:
  extends: .build ui plugin
  variables:
    PROJECT_PATH: update-themes
    PACKAGE_NAME: open-xchange-appsuite-manifest
  only:
    changes:
      - ui/**/*
      - update-themes/**/*
      - open-xchange-appsuite/**/*
      - open-xchange-appsuite-l10n/**/*
      - open-xchange-appsuite-manifest/**/*
      - gitlab_ci/*
      - .gitlab-ci.yml

build ui docker image:
  dependencies:
    - build ui

test ui:
  image: gitlab.open-xchange.com:4567/frontend/dev_env/browser:latest
  variables:
    BROWSERS: DockerHeadless
  script:
    - cd ui
    - yarn test
  stage: test
  dependencies:
    - build ui
  artifacts:
    reports:
      junit: ui/build/reports/unit/*/result.xml
  only:
    changes:
      - ui/**/*

run e2e tests:
  extends: .default_cache
  # don't change the cache, just pull should be up-to-date due to previous build jobs
  cache:
    policy: pull

build help:
  extends: .build ui plugin
  variables:
    PROJECT_PATH: help
    PACKAGE_NAME: open-xchange-appsuite-help
  only:
    changes:
      - help/**/*
      - open-xchange-appsuite-help/**/*
      - gitlab_ci/*
      - .gitlab-ci.yml

build guidedtours:
  extends: .build ui plugin
  variables:
    PROJECT_PATH: guidedtours
  only:
    changes:
      - guidedtours/**/*

build spamexperts:
  extends: .build ui plugin
  variables:
    PROJECT_PATH: open-xchange-appsuite-spamexperts
  only:
    changes:
      - open-xchange-appsuite-spamexperts/**/*

build dynamic-theme:
  extends: .build ui plugin
  variables:
    PROJECT_PATH: open-xchange-dynamic-theme
  only:
    changes:
      - open-xchange-dynamic-theme/**/*
