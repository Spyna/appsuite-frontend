---

# deploy e2e environment to well-known location - can be used to develop e2e tests against
deploy e2e dev server:
  stage: deploy
  dependencies: []
  variables:
    DOCKER_HOST: docker.ui.cloud.open-xchange.com
    DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    CONTAINER_NAME: e2e-develop
    SERVER: http://10.20.28.164/appsuite/
  script:
    - docker stop $CONTAINER_NAME || true
    - docker wait $CONTAINER_NAME || true
    - docker rm $CONTAINER_NAME || true
    - docker pull $DOCKER_IMAGE
    - docker container create --name $CONTAINER_NAME -e SERVER=$SERVER -v /app/build/e2e $DOCKER_IMAGE e2e
    - docker container cp ui/e2e/fixtures $CONTAINER_NAME:/app/build/e2e
    - docker container start $CONTAINER_NAME
  only:
    - develop

deploy e2e testserver:
  stage: deploy
  dependencies: []
  variables:
    DOCKER_HOST: docker.ui.cloud.open-xchange.com
    DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    CONTAINER_NAME: e2e_$CI_PIPELINE_ID
    SERVER: http://10.20.28.164/appsuite/
  script:
    - docker pull $DOCKER_IMAGE
    - docker container create --name $CONTAINER_NAME -e SERVER=$SERVER -v /app/build/e2e $DOCKER_IMAGE e2e
    - docker container cp ui/e2e/fixtures $CONTAINER_NAME:/app/build/e2e
    - docker container start $CONTAINER_NAME

run e2e tests:
  stage: e2e
  image: gitlab.open-xchange.com:4567/frontend/dev_env:0.0.3
  services:
    - selenium/standalone-chrome
  dependencies: []
  variables:
    LAUNCH_URL: http://e2e-$CI_PIPELINE_ID.ui.cloud.open-xchange.com/appsuite/
    SELENIUM_HOST: selenium-standalone-chrome
  script:
    - cd ui
    - yarn --cache-folder ../.yarn-cache
    - yarn e2e
  tags:
    - shm
  artifacts:
    paths:
      - ui/build/e2e/
    when: on_failure
    expire_in: 1 day

stop e2e testserver:
  stage: cleanup
  dependencies: []
  variables:
    GIT_STRATEGY: none
    DOCKER_HOST: docker.ui.cloud.open-xchange.com
    DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    CONTAINER_NAME: e2e_$CI_PIPELINE_ID
  script:
    - docker container stop $CONTAINER_NAME || true
    - docker container wait $CONTAINER_NAME || true
    - docker container rm $CONTAINER_NAME || true
  when: always
