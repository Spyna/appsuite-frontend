<project name   ="mod_utils"
		 basedir=".">

	<!-- =================================================================================
	  -->
    <description>
		Collection of utility functions
    </description>
    
	<!-- =================================================================================
	  -->
	<macrodef name="mod_utils.init">
	<attribute name="feature.slow-down" default="false" />
	<sequential>
		<if>
			<not><isset property="mod_utils.var.initialized" /></not>
			<then>
				<property name="mod_utils.feature.slow-down" value="@{feature.slow-down}" />
			
				<property name="mod_utils.var.initialized" value="true" />
			</then>
		</if>
	</sequential>
	</macrodef>

	<!-- =================================================================================
	     dump given classpath (using pretty format) on stdout.
	     
	     @param	refid [IN]
	     		a reference id of the classpath which has to be dumped here.
	  -->
	<macrodef name="mod_utils.dump-classpath">
        
        <attribute name="refid" />
        
        <sequential>
            <var name ="local.pretty-classpath"
            	 unset="true" />

            <pathconvert pathsep ="${line.separator}|   |-- "
                         property="local.pretty-classpath"
                         refid   ="@{refid}" />
            <echo message="classpath : @{refid}${line.separator}${local.pretty-classpath}" />        
        </sequential>
    </macrodef>

	<!-- =================================================================================
	     dump given fileset (using pretty format) on stdout.
	     
	     @param	refid [IN]
	     		a reference id of the fileset which has to be dumped here.
	  -->
	<macrodef name="mod_utils.dump-fileset">
        
        <attribute name="refid" />
        
        <sequential>
            <var name ="local.pretty-fileset"
            	 unset="true" />

            <pathconvert pathsep ="${line.separator}|   |-- "
                         property="local.pretty-fileset"
                         refid   ="@{refid}" />
            <echo message="fileset : @{refid}${line.separator}${local.pretty-fileset}" />        
        </sequential>
    </macrodef>

	<!-- =================================================================================
	  -->
	<macrodef name="mod_utils.fileset-2-list">
        
        <attribute name="refid"     />
        <attribute name="list"      />
        <attribute name="separator" default="," />
        
        <sequential>
            <var name ="local.list" unset="true" />

            <pathconvert pathsep ="@{separator}"
                         property="local.list"
                         refid   ="@{refid}" />

            <var name="@{list}" value="${local.list}" />
        </sequential>
    </macrodef>

	<!-- =================================================================================
	  -->
	<macrodef name="mod_utils.get-simple-filename">
        
        <attribute name="full-name"   />
        <attribute name="extension"   />
        <attribute name="simple-name" />
        
        <sequential>
	        <var name="@{simple-name}" unset="true" />

			<basename property="@{simple-name}"
					  file    ="@{full-name}"
			          suffix  =".@{extension}"
			/>
        </sequential>
    </macrodef>

	<!-- =================================================================================
	     clean the given path ... but make sure it exists und all circumstances.
	     - if path not exists ... it will be created new.
	     - if path exists .. it will be removed and recreated.
	  -->
	<macrodef name="mod_utils.clean-path">
        
        <attribute name="path" />
        
        <sequential>
			<delete dir="@{path}" />
			<mkdir  dir="@{path}" />
        </sequential>
    </macrodef>

    <!-- =======================================================================
      -->
    <macrodef name="mod_utils.append-to-list">

        <attribute name="list"      />
        <attribute name="value"     />
    	<attribute name="delimiter" default="," />

        <sequential>

            <if>
                <isset property="@{list}" />
                <then>
                    <var name="@{list}" value="${@{list}}@{delimiter}@{value}" />
                </then>
                <else>
                    <var name="@{list}" value="@{value}" />
                </else>
            </if>

        </sequential>
    </macrodef>

    <!-- =======================================================================
      -->
    <macrodef name="mod_utils.read-list-from-file-by-line">

        <attribute name="list"      />
        <attribute name="file"      />
    	<attribute name="delimiter" default="," />

        <sequential>

			<var name="local.content" unset="true" />
			<var name="local.line"    unset="true" />
			
			<loadfile property="local.content"
					  srcfile ="@{file}"
			/>
		
			<for param    ="local.line"
				 list     ="${local.content}"
				 delimiter="${line.separator}"
			>
			<sequential>
				<mod_utils.append-to-list list     ="@{list}"
										  value    ="@{local.line}"
										  delimiter="@{delimiter}"
				/>
			</sequential>
			</for>

        </sequential>
    </macrodef>
    
    <!-- =======================================================================
      -->
    <macrodef name="mod_utils.read-list-from-stdout">

        <attribute name="list"      />
        <attribute name="stdout"    />
    	<attribute name="delimiter" default="," />

        <sequential>

			<var name="local.content" unset="true" />
			<var name="local.line"    unset="true" />
			
			<for param    ="local.line"
				 list     ="@{stdout}"
				 delimiter="${line.separator}"
			>
			<sequential>
				<mod_utils.append-to-list list     ="@{list}"
										  value    ="@{local.line}"
										  delimiter="@{delimiter}"
				/>
			</sequential>
			</for>

        </sequential>
    </macrodef>

    <!-- =======================================================================
      -->
    <scriptdef name    ="mod_utils.is-less-than"
               language="javascript">

        <attribute name="arg1"       />
        <attribute name="arg2"       />
    	<attribute name="resultprop" />

        <![CDATA[
			var arg1       = parseInt(attributes.get("arg1"));
			var arg2       = parseInt(attributes.get("arg2"));
			var resultprop = attributes.get("resultprop");
			var state      = (arg1 < arg2);
			
			project.setProperty (resultprop, state);
        ]]>
    </scriptdef>

    <!-- =======================================================================
      -->
    <scriptdef name    ="mod_utils.string-replace"
               language="javascript">

        <attribute name="string"       />
        <attribute name="search"       />
        <attribute name="replace-with" />
    	<attribute name="result-prop"  />

        <![CDATA[
			//importPackage(java.lang);
			var sString      = attributes.get("string"      );
			var sSearch      = attributes.get("search"      );
			var sReplaceWith = attributes.get("replace-with");
			var sResultProp  = attributes.get("result-prop" );
			var sResult      = sString.replace(sSearch, sReplaceWith);

			//java.lang.System.out.println("'"+sString+"'.replace('"+sSearch+"', '"+sReplaceWith+"') = '"+sResult+"'");
			//java.lang.System.out.println("set result prop '"+sResultProp+"' to = '"+sResult+"'");
			
			project.setProperty (sResultProp, sResult);
        ]]>
    </scriptdef>

    <!-- =================================================================================
      -->
    <macrodef name="mod_utils.slow-down">
    <sequential>
    	<if>
			<istrue value="${mod_utils.feature.slow-down}" />
			<then>
				<sleep seconds="5" />
			</then>
        </if>
    </sequential>
    </macrodef>

</project>
