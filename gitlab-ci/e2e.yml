---

run e2e tests:
  stage: e2e
  image: gitlab.open-xchange.com:4567/frontend/dev_env/puppeteer:latest
  tags:
    - e2e
    - kubernetes
  needs:
    - build ui docker image
  services:
    - name: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
      alias: e2e-test.os.oxui.de
  variables:
    # e2e configuration
    LAUNCH_URL: http://e2e-test.os.oxui.de:8337/appsuite/
    PROVISIONING_URL: http://e2e-test.os.oxui.de:8337/
    PROVISIONING_KEYCLOAK_URL: https://idp.k3s.os.oxui.de
    PROVISIONING_KEYCLOAK_REALM: Appsuite
    PROVISIONING_KEYCLOAK_USER: $KEYCLOAK_ADMIN_USER
    PROVISIONING_KEYCLOAK_PASS: $KEYCLOAK_ADMIN_PASSWORD
    CONTEXT_ID: $CI_JOB_ID
    CHROME_ARGS: '--no-sandbox --kiosk-printing --disable-web-security'
    FILTER_SUITE: ./e2e/suites/job$CI_NODE_INDEX.json
    FILTER_REPORT: filter_report_$CI_NODE_INDEX.json
    # services configuration
    SERVER: https://appsuite.k3s.os.oxui.de/appsuite/
    # gitlab config
    GIT_DEPTH: "10"
  script:
    - cd ui
    - yarn --non-interactive --no-progress -s --cache-folder ../.yarn-cache
    - mkdir -p ./build/e2e
    - wget http://reports.ui.cloud.open-xchange.com/$CI_COMMIT_REF_SLUG/filter_report.json -q -O ./build/e2e/suite.json || rm -f ./build/e2e/suite.json
    - "[ -f ./build/e2e/suite.json ] || runOnly=true npx codeceptjs run -o '{ \"plugins\": { \"filterSuite\": { \"suite\": [], \"report\": \"suite.json\" } } }'"
    - node -e "require('@open-xchange/codecept-helper/src/plugins/filterSuite/partition.js')" ./build/e2e/suite.json $CI_NODE_TOTAL ./e2e/suites
    - yarn e2e
  parallel: 20
  # reasonable timeout, enforce better partitioning
  timeout: 30 minutes
  artifacts:
    when: always
    paths:
      - ui/build/e2e/
    expire_in: 1 day
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /^(poc|e2e)\//'
      when: never
    - changes:
        - ui/**/*
      when: on_success
      allow_failure: true
  retry:
    max: 2
    when:
      - runner_system_failure

# deploy e2e environment to well-known location - can be used to develop e2e tests against
trigger appsuite-stack deployment pipeline:
  stage: deploy
  variables:
    ENVIRONMENT: $CI_COMMIT_REF_SLUG
  trigger:
    project: frontend/infrastructure/appsuite-stack
    strategy: depend
  rules:
    - if: '$CI_COMMIT_REF_SLUG == "develop"'
      when: always

merge filter report:
  stage: merge
  image: gitlab.open-xchange.com:4567/frontend/dev_env/puppeteer:latest
  dependencies:
    - run e2e tests
  needs:
    - run e2e tests
  services:
    - name: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
      alias: e2e-test.os.oxui.de
  variables:
    # e2e configuration
    LAUNCH_URL: http://e2e-test.os.oxui.de:8337/appsuite/
    PROVISIONING_URL: http://e2e-test.os.oxui.de:8337/
    PROVISIONING_KEYCLOAK_URL: https://idp.k3s.os.oxui.de
    PROVISIONING_KEYCLOAK_REALM: Appsuite
    PROVISIONING_KEYCLOAK_USER: $KEYCLOAK_ADMIN_USER
    PROVISIONING_KEYCLOAK_PASS: $KEYCLOAK_ADMIN_PASSWORD
    CONTEXT_ID: $CI_JOB_ID
    CHROME_ARGS: '--no-sandbox --disable-gpu'
    FILTER_SUITE: ./merged_reports.json
    FILTER_REPORT: filter_report_missing.json
    MIN_SUCCESS: 1
    MAX_RERUNS: 5
    # services configuration
    SERVER: https://appsuite.k3s.os.oxui.de/appsuite/
    # gitlab config
    GIT_DEPTH: "10"
  script:
    - cd ui
    - yarn --non-interactive --no-progress -s --cache-folder ../.yarn-cache
    - ls build/e2e/filter_report_*.json
    - node -e "require('@open-xchange/codecept-helper/src/plugins/filterSuite/merge')" ./build/e2e/filter_report_*.json > $FILTER_SUITE
    # check if the filter suite file exists, otherwise something went wrong in the run e2e tests jobs
    - "[ -f $FILTER_SUITE ] && fgrep 'title' $FILTER_SUITE > /dev/null"
    # ignore any failing tests
    - yarn e2e -i || true
    - node -e "require('@open-xchange/codecept-helper/src/plugins/filterSuite/merge')" ./build/e2e/$FILTER_REPORT $FILTER_SUITE > ./build/e2e/filter_report.json
    - node -e "require('@open-xchange/codecept-helper/src/plugins/filterSuite/filterFailed')" ./build/e2e/filter_report_missing.json > ./build/e2e/filter_failed_tests.txt
    - while read line; do echo $line && npx codeceptjs run-rerun --fgrep "$line" || echo "$line" >> ./build/e2e/still_failing_tests.txt; done < ./build/e2e/filter_failed_tests.txt
    - if [ -f ./build/e2e/still_failing_tests.txt ];then while read line; do echo "$line"; done < ./build/e2e/still_failing_tests.txt && echo "There are still failing tests. Report published to http://reports.ui.cloud.open-xchange.com/$CI_COMMIT_REF_SLUG/$CI_PIPELINE_ID/" && false;fi
  tags:
    - e2e
  artifacts:
    when: always
    paths:
      - ui/build/
      - ui/merged_reports.json
    expire_in: 1 day
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /^(poc|e2e)\//'
      when: never
    - changes:
        - ui/**/*
      when: always
  retry:
    max: 2
    when:
      - runner_system_failure

rerun failed tests:
  extends: run e2e tests
  stage: merge
  dependencies:
    - run e2e tests
  needs:
    - run e2e tests
  variables:
    FILTER_SUITE: ""
    MIN_SUCCESS: 1
    MAX_RERUNS: 5
  script:
  - cd ui
  - yarn --non-interactive --no-progress -s --cache-folder ../.yarn-cache
  - ls build/e2e/filter_report_*.json
  - node -e "require('@open-xchange/codecept-helper/src/plugins/filterSuite/filterFailed')" ./build/e2e/$FILTER_REPORT > ./build/e2e/filter_failed_tests.txt
  - while read line; do echo $line && npx codeceptjs run-rerun --fgrep "$line" || echo "$line" >> ./build/e2e/still_failing_tests.txt; done < ./build/e2e/filter_failed_tests.txt
  - if [ -f ./build/e2e/still_failing_tests.txt ];then while read line; do echo "$line"; done < ./build/e2e/still_failing_tests.txt && echo "There are still failing tests. Report published to http://reports.ui.cloud.open-xchange.com/$CI_COMMIT_REF_SLUG/$CI_PIPELINE_ID/" && false;fi
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /^(poc|e2e)\//'
      when: never
    - changes:
        - ui/**/*
      when: on_success
      allow_failure: false

generate e2e report:
  stage: report
  image: gitlab.open-xchange.com:4567/frontend/dev_env/allure:latest
  variables:
    GIT_STRATEGY: none
  dependencies:
    - run e2e tests
    - merge filter report
    - rerun failed tests
    - run single test
  script:
    # fail if there are no test results, prevents history from getting lost in some cases
    - ls ui/build/e2e/*.xml > /dev/null
    # fetch current version of history
    - wget http://reports.ui.cloud.open-xchange.com/$CI_COMMIT_REF_SLUG/history.tar -q -O - | tar x &>/dev/null && mv ui/build/allure-report/history ui/build/e2e/ || echo "No history found"
    - allure generate ui/build/e2e/ -o ui/build/allure-report/$CI_PIPELINE_ID
    # preserve well-known location to bookmark/link to at latest
    - cp -r ui/build/allure-report/$CI_PIPELINE_ID/history ui/build/allure-report/
    - tar cf ui/build/allure-report/history.tar ui/build/allure-report/history &>/dev/null || echo "No history found"
    - rm -rf ui/build/allure-report/history/
  artifacts:
    when: always
    paths:
      - ui/build/allure-report
    expire_in: 1 day
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /^(develop|master-?.*|release-.*|feature\/.*|bug\/.*|e2e\/.*)$/'
      changes:
        - ui/**/*
      when: always

publish e2e report:
  stage: cleanup
  variables:
    DOCKER_HOST: docker.ui.cloud.open-xchange.com
    GIT_STRATEGY: none
  dependencies:
    - generate e2e report
    - merge filter report
    - rerun failed tests
  script:
    # fail if there is no history being generated. Prevents empty reports from being "published".
    - ls ui/build/allure-report/history.tar > /dev/null
    - docker cp ui/build/allure-report/. reports:/usr/share/nginx/html/$CI_COMMIT_REF_SLUG
    - docker exec reports rm -f /usr/share/nginx/html/$CI_COMMIT_REF_SLUG/latest
    - docker exec reports ln -sf /usr/share/nginx/html/$CI_COMMIT_REF_SLUG/$CI_PIPELINE_ID /usr/share/nginx/html/$CI_COMMIT_REF_SLUG/latest
    - docker cp ui/build/e2e/filter_report.json reports:/usr/share/nginx/html/$CI_COMMIT_REF_SLUG/ || true
  environment:
    name: reports/$CI_COMMIT_REF_SLUG
    url: http://reports.ui.cloud.open-xchange.com/$CI_COMMIT_REF_SLUG/$CI_PIPELINE_ID/
    on_stop: remove e2e report
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /^(develop|master-?.*|release-.*|feature\/.*|bug\/.*|e2e\/.*)$/'
      changes:
        - ui/**/*
      when: always

remove e2e report:
  stage: cleanup
  dependencies: []
  variables:
    DOCKER_HOST: docker.ui.cloud.open-xchange.com
    GIT_STRATEGY: none
  script:
    - docker exec reports rm -rf /usr/share/nginx/html/$CI_COMMIT_REF_SLUG
  environment:
    name: reports/$CI_COMMIT_REF_SLUG
    action: stop
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /^(release-.*|feature\/.*|bug\/.*|e2e\/.*)$/'
      changes:
        - ui/**/*
      when: manual
      allow_failure: true
    - if: '$CI_COMMIT_REF_NAME =~ /^(develop|master-?.*|poc\/.*)$/'
      when: never

run single test:
  extends: run e2e tests
  needs: []
  services:
    - name: $CI_REGISTRY_IMAGE:develop
      alias: e2e-test.os.oxui.de
  script:
  - cd ui
  - yarn --non-interactive --no-progress -s --cache-folder ../.yarn-cache
  - echo ${CI_COMMIT_REF_NAME//e2e\//}
  - npx codeceptjs run-rerun --grep "${CI_COMMIT_REF_NAME//e2e\//}"
  parallel: 5
  timeout: 60 minutes
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /^e2e\//'
      when: always
