---

stages:
  - test
  - deploy

build webserver image with static files:
  stage: deploy
  variables:
    TAG_NAME: ${CI_COMMIT_REF_SLUG}
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull ${CI_REGISTRY_IMAGE}/static:${TAG_NAME} || docker build --pull -t ${CI_REGISTRY_IMAGE}/static:${TAG_NAME} -f images/static-base.Dockerfile images
    - docker pull nginx:alpine
    - mkdir -p images/static/root/appsuite
    - docker build -t ${CI_REGISTRY_IMAGE}/static:${TAG_NAME} -f images/static.Dockerfile --build-arg DOCKER_TAG=${TAG_NAME} images
    - docker push ${CI_REGISTRY_IMAGE}/static:${TAG_NAME}

build ui docker image:
  script:
    - docker build --pull -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG} ui/
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}
  stage: test
  needs:
    - build ui
  only:
    changes:
      - ui/**/*

.tag docker image: &add_tag
  stage: deploy
  dependencies: [] # none
  script:
    - "[ -z $TAG_NAME ] && export TAG_NAME=$(echo $CI_JOB_NAME | sed 's/tag //') || true"
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker pull ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}
    - docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG} ${CI_REGISTRY_IMAGE}:${TAG_NAME}
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker push ${CI_REGISTRY_IMAGE}:${TAG_NAME}

tag latest:
  # create a tag on the docker registry, :latest always means last build on develop branch
  <<: *add_tag
  only:
    - develop

tag stable:
  <<: *add_tag
  only:
    - master

tag tags:
  <<: *add_tag
  variables:
    TAG_NAME: ${CI_COMMIT_TAG}
  only:
    - tags
